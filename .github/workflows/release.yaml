name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "chore(release):*"

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check_commit.outputs.should_run }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get commit message
        id: commit_message
        run: echo "::set-output name=message::$(git log -1 --pretty=%B)"

      - name: Determine if workflow should run
        id: check_commit
        run: |
          if [[ "${{ steps.commit_message.outputs.message }}" == *"chore(release):"* ]]; then
            echo "::set-output name=should_run::false"
          else
            echo "::set-output name=should_run::true"
          fi

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: check-commit-message
    if: needs.check-commit-message.outputs.should_run == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Clean install dependencies
        run: npm ci

      - name: Set Git user
        run: |
          git config user.email "subratpatnaik.email@gmail.com"
          git config user.name "Subrat Kumar Pattanaik"

      - name: Create release
        run: npm run release

      - name: Push changes and tags
        run: git push --follow-tags origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        run: npm run build

      - name: Configure npm for authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
